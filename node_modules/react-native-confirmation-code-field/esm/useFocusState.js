import { useState, useCallback, useDebugValue } from 'react';
export function useFocusState(onBlurFromProps, onFocusFromProps) {
    'use memo';
    const [isFocused, setFocusFlag] = useState(false);
    const onBlur = useCallback(function onInputBlur(blurEvent) {
        setFocusFlag(false);
        onBlurFromProps?.(blurEvent);
    }, [onBlurFromProps]);
    const onFocus = useCallback(function onInputFocus(focusEvent) {
        setFocusFlag(true);
        onFocusFromProps?.(focusEvent);
    }, [onFocusFromProps]);
    useDebugValue(isFocused ? 'Focused' : 'Unfocused');
    return [isFocused, onFocus, onBlur];
}
